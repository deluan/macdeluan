[user]
	name = Deluan

[push]
	default = simple

[pull]
    rebase = true

[alias]
	clone = clone --recursive
	st = status
	co = checkout
	ci = commit
	pr = pull --rebase
	lg = log --oneline
	ls = log --pretty=format:'%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]' --decorate
	ll = log --pretty=format:'%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]' --decorate --numstat
	hist = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an %C(reset)<%C(dim yellow)%ae%C(reset)> [%GS]%C(reset)%C(bold yellow)%d%C(reset)' --all
	amend = commit --amend
	who = "!f() { user=`git config user.name`; email=`git config user.email`; echo \"$user <$email>\"; }; f"
	set-user = "!f() { git config --local user.name \"$1\" && git config --local user.email \"$2\"; }; f"
	undo-last-commit = reset --soft 'HEAD^'
	undo-last-commit-hard = reset --hard 'HEAD^'
	serve = daemon --reuseaddr --base-path=. --export-all --verbose
	alias = config --get-regexp ^alias\\.
	bdiff = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
	out = log origin/master..HEAD
	ssave = stash save
	slist = stash list
	sshow = "!f() { git stash show stash^{/$*} -p; }; f"
	sapply = "!f() { git stash apply stash^{/$*}; }; f"
	sdrop = "!f() { git stash drop stash^{$*}; }; f"

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true

[core]
	filemode = false
	autocrlf = input
	excludesfile = /Users/deluan/.gitignore_global

[init]
	templatedir = ~/.git-templates
